corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, removeWords, stopwords("en"))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
googlebadwords <- read.delim("~google_bad_words.txt",sep = ":",header = FALSE)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(doParallel)
library(stringi)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(RWeka)
file_conn = file("~/Documents/myStuff/courses/10_dataScienceCapstone/final/en_US/en_US.blogs.txt")
blogs <- readLines(file_conn, encoding="UTF-8", skipNul=TRUE)
close(file_conn)
file_conn = file("~/Documents/myStuff/courses/10_dataScienceCapstone/final/en_US/en_US.news.txt")
news <- readLines(file_conn, encoding = "UTF-8", skipNul = TRUE)
close(file_conn)
file_conn = file("~/Documents/myStuff/courses/10_dataScienceCapstone/final/en_US/en_US.twitter.txt")
twitter <- readLines(file_conn, encoding = "UTF-8", skipNul = TRUE)
close(file_conn)
stats <- data.frame(File_Name=c("US_blogs", "US_news", "US_twitter"),
FileSize=c(file.info("~/Documents/myStuff/courses/10_dataScienceCapstone/final/en_US/en_US.blogs.txt")$size/1024*1024, file.info("~/Documents/myStuff/courses/10_dataScienceCapstone/final/en_US/en_US.news.txt")$size/1024*1024, file.info("~/Documents/myStuff/courses/10_dataScienceCapstone/final/en_US/en_US.twitter.txt")$size/1024*1024),
WordCount=sapply(list(blogs, news, twitter), stri_stats_latex)[4,],
t(rbind(sapply(list(blogs, news, twitter), stri_stats_general)[c('Lines','Chars'),]
)))
head(stats)
set.seed(4321)
sample_data <- c(sample(blogs, length(blogs)/500),
sample(news, length(news)/500),
sample(twitter, length(twitter)/500))
corpus <- VCorpus(VectorSource(sample_data))
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
corpus <- tm_map(corpus, toSpace, "(f|ht)tp(s?)://(.*)[.][a-z]+")
corpus <- tm_map(corpus, toSpace, "@[^\\s]+")
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, removeWords, stopwords("en"))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
googlebadwords <- read.delim("~~/Documents/myStuff/courses/10_dataScienceCapstone/final/en_US/google_bad_words.txt",sep = ":",header = FALSE)
ls()
set.seed(4321)
sample_data <- c(sample(blogs, length(blogs)/500),
sample(news, length(news)/500),
sample(twitter, length(twitter)/500))
corpus <- VCorpus(VectorSource(sample_data))
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
corpus <- tm_map(corpus, toSpace, "(f|ht)tp(s?)://(.*)[.][a-z]+")
corpus <- tm_map(corpus, toSpace, "@[^\\s]+")
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, removeWords, stopwords("en"))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, PlainTextDocument)
googlebadwords <- read.delim("~/Documents/myStuff/courses/10_dataScienceCapstone/final/en_US/google_bad_words.txt",sep = ":",header = FALSE)
googlebadwords <- googlebadwords[,1]
corpus <- tm_map(corpus, removeWords, googlebadwords)
unigramTokenizer <- function(x) {
NGramTokenizer(x, Weka_control(min = 1, max = 1))
}
unigrams <- DocumentTermMatrix(corpus, control = list(tokenize = unigramTokenizer))
BigramTokenizer <- function(x) {
NGramTokenizer(x, Weka_control(min = 2, max = 2))
}
bigrams <- DocumentTermMatrix(corpus, control = list(tokenize = BigramTokenizer))
TrigramTokenizer <- function(x) {
NGramTokenizer(x, Weka_control(min = 3, max = 3))
}
trigrams <- DocumentTermMatrix(corpus, control = list(tokenize = TrigramTokenizer))
freq_unigrams <- sort(colSums(as.matrix(unigrams)),decreasing = TRUE)
freq_unigrams_df <- data.frame(word = names(freq_unigrams), count = freq_unigrams) %>%
arrange((-count))%>%
slice(1:10)
ggplot(freq_unigrams_df, aes(x = reorder(word,-count), y = count)) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_gradient(low = "green", high = "blue") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle("Unigrams") +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
freq_bigrams <- sort(colSums(as.matrix(bigrams)),decreasing = TRUE)
freq_bigrams_df <- data.frame(word = names(freq_bigrams), count = freq_bigrams) %>%
arrange((-count))%>%
slice(1:10)
ggplot(freq_bigrams_df, aes(x = reorder(word,-count), y = count)) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_gradient(low = "green", high = "blue") +
theme_bw() +
ylab("Times Occuring") +
xlab("Word") +
ggtitle("Bigrams") +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
freq_trigrams <- sort(colSums(as.matrix(trigrams)),decreasing = TRUE)
freq_trigrams_df <- data.frame(word = names(freq_trigrams), count = freq_trigrams) %>%
arrange((-count))%>%
slice(1:10)
ggplot(freq_trigrams_df, aes(x = reorder(word,-count), y = count)) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_gradient(low = "green", high = "blue") +
theme_bw() +
ylab("Times Occuring") +
xlab("Word") +
ggtitle("Trigrams") +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(5, .1), colors=brewer.pal(6, "Dark2"))
wordcloud(names(freq_bigrams), freq_bigrams, max.words=50, scale=c(5, .1), colors=brewer.pal(6, "Dark2"))
wordcloud(names(freq_trigrams), freq_trigrams, max.words=50, scale=c(5, .1), colors=brewer.pal(6, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, random.order = FALSE,rot.per=0.35, use.r.layout=FALSE,colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, 4,.5, colors=brewer.pal(6, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(4, .5), colors=brewer.pal(6, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(5, .1), colors=brewer.pal(6, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(4, .5), colors=brewer.pal(6, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(4, .5), colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(2, .5), colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(2, .1), colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(1, .1), colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(2, .2), colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(2, .1), colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=50, scale=c(2, .01), colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=200, scale=c(2, .01), colors=brewer.pal(8, "Dark2"))
load("~/Documents/MyAppleProjects/CellBuildProjects/Gen5+_programs/Rss_Aging/Rss_cupt_ongoing.R")
directory <- "/Users/akshayapadhi/Documents/MyAppleProjects/CellBuildProjects/Gen5+_programs/Rss_Aging/FCPD/cupt/resistanceFiles_onGoing _for_report"
dataFiles <- list.files(path = directory, pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
dataFiles
ls()
unigrams
names(unigrams)
head(unigrams)
dim(inigrams)
dim(unigrams)
head(unigrams[i])
unigrams[i]
unigrams
str(unigrams)
str(as.matrix(unigrams))
(as.matrix(unigrams))
as.matrix(unigrams)
colSum(as.matrix(unigrams))
colSums(as.matrix(unigrams))
sort(colSums(as.matrix(unigrams)))
sort(colSums(as.matrix(unigrams)), decreasing = TURE)
sort(colSums(as.matrix(unigrams)), decreasing = TRUE)
names(colSums(as.matrix(unigrams)))
colSums(as.matrix(unigrams))
#### Unigrams
# freq_unigrams <- sort(colSums(as.matrix(unigrams)),decreasing = TRUE)
freq_unigrams <- colSums(as.matrix(unigrams))
freq_unigrams_df <- data.frame(word = names(freq_unigrams), count = freq_unigrams) %>%
arrange((-count))%>%
slice(1:10)
ggplot(freq_unigrams_df, aes(x = reorder(word,-count), y = count)) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_gradient(low = "green", high = "blue") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle("Unigrams") +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x1
x
rowSums(x); colSums(x)
createBarChart <- function(d, xCol, yCol, title)
{
ggplot(d[1:10,], aes(x = reorder(get(xCol),-get(yCol)), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "brown") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
#### Unigrams
# freq_unigrams <- sort(colSums(as.matrix(unigrams)),decreasing = TRUE)
freq_unigrams <- colSums(as.matrix(unigrams))
freq_unigrams_df <- data.frame(word = names(freq_unigrams), count = freq_unigrams) %>%
arrange((-count))%>%
slice(1:10)
createBarChart(freq_unigrams,"word","freq","Frequency of Unigrams")
library(tidyverse)
createBarChart(freq_unigrams,word,count,"Frequency of Unigrams")
createBarChart <- function(d, xCol, yCol, title)
{
ggplot(d, aes(x = reorder(get(xCol),-get(yCol)), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "brown") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
createBarChart(freq_unigrams,word,count,"Frequency of Unigrams")
createBarChart(freq_unigrams,"word","count","Frequency of Unigrams")
createBarChart <- function(d, x, y, title)
{
ggplot(d, aes(x = reorder(x = reorder(x,-y), y = y))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "brown") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
createBarChart(freq_unigrams,word,count,"Frequency of Unigrams")
createBarChart <- function(d, p, q, title)
{
ggplot(d, aes(x = p, y = q)) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = q)) +
scale_fill_gradient(low = "pink", high = "brown") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
createBarChart(freq_unigrams,freq_unigrams$word,freq_unigrams$count,"Frequency of Unigrams")
createBarChart <- function(d, x, y, title)
{
ggplot(d, aes(x = get(x), y = get(y))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(y))) +
scale_fill_gradient(low = "pink", high = "brown") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
createBarChart(freq_unigrams,"word", "count", "Frequency of Unigrams")
createBarChart <- function(d, xCol, yCol, title)
{
ggplot(d, aes(x = get(xCol), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "brown") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
createBarChart(freq_unigrams,"word", "count", "Frequency of Unigrams")
createBarChart(freq_unigrams_df,"word", "count", "Frequency of Unigrams")
ggplot(d, aes(x = get(xCol), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "yellow") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
createBarChart(freq_unigrams_df,"word", "count", "Frequency of Unigrams")
createBarChart <- function(d, xCol, yCol, title)
{
ggplot(d, aes(x = get(xCol), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "yellow") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
createBarChart(freq_unigrams_df,"word", "count", "Frequency of Unigrams")
ggplot(d, aes(x = reorder(get(xCol),-get(yCol)), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "yellow") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
createBarChart <- function(d, xCol, yCol, title)
{
ggplot(d, aes(x = reorder(get(xCol),-get(yCol)), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "yellow") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
createBarChart(freq_unigrams_df,"word", "count", "Frequency of Unigrams")
#### Unigrams
# freq_unigrams <- sort(colSums(as.matrix(unigrams)),decreasing = TRUE)
freq_unigrams_df <- colSums(as.matrix(unigrams))%>%
data.frame(word = names(freq_unigrams), count = freq_unigrams) %>%
arrange((-count))%>%
slice(1:10)
createBarChart(freq_unigrams_df,"word", "count", "Frequency of Unigrams")
ggplot(d[1:10,], aes(x = reorder(get(xCol),-get(yCol)), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "yellow") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
createBarChart <- function(d, xCol, yCol, title)
{
ggplot(d[1:10,], aes(x = reorder(get(xCol),-get(yCol)), y = get(yCol))) +
geom_bar(stat = "identity") +
geom_bar(stat = "identity", aes(fill = get(yCol))) +
scale_fill_gradient(low = "pink", high = "yellow") +
theme_bw() +
ylab("Count") +
xlab("Word") +
ggtitle(title) +
theme(
plot.title = element_text(size = rel(1.5), color = "black", face = "bold", hjust = 0.5),
plot.margin = unit(c(.5,1,1,1), "cm"),
axis.title.x = element_text(color="black", size=rel(1.3), face="bold"),
axis.title.y = element_text(color="black", size=rel(1.3), face="bold"),
axis.text.x = element_text(color="black", size=10, angle = 45, hjust = 1),
axis.text.y = element_text(color="black", size=10),
legend.title=element_blank(),
legend.position="none")
}
library(wordcloud)
wordcloud(corpus, max.words = 50, random.order = FALSE,rot.per=0.35, use.r.layout=FALSE,colors=brewer.pal(8, "Dark2"))
wordcloud(names(freq_unigrams), freq_unigrams, max.words=200, scale=c(2, .01), colors=brewer.pal(8, "Dark2"))
wordcloud(words= freq_unigrams_df$word, freq = freq_unigrams$count, max.words=200, scale=c(2, .01), colors=brewer.pal(8, "Dark2"))
#### Unigrams
# freq_unigrams <- sort(colSums(as.matrix(unigrams)),decreasing = TRUE)
freq_unigrams <- colSums(as.matrix(unigrams))
freq_unigrams_df<- data.frame(word = names(freq_unigrams), count = freq_unigrams) %>%
arrange((-count))%>%
slice(1:10)
wordcloud(words= freq_unigrams_df$word, freq = freq_unigrams$count, max.words=200, scale=c(2, .01), colors=brewer.pal(8, "Dark2"))
freq_unigrams_df$word
freq_unigrams_df<- data.frame(word = names(freq_unigrams), count = freq_unigrams) %>%
arrange((-count))
wordcloud(words= freq_unigrams_df$word, freq = freq_unigrams$count, max.words=200, scale=c(2, .01), colors=brewer.pal(8, "Dark2"))
wordcloud(words= freq_unigrams_df$word, freq = freq_unigrams_df$count, max.words=200, scale=c(2, .01), colors=brewer.pal(8, "Dark2"))
wordcloud(corpus, max.words = 50, random.order = FALSE,rot.per=0.35, use.r.layout=FALSE,colors=brewer.pal(8, "Dark2"))
wordcloud(words= freq_unigrams_df$word, freq = freq_unigrams_df$count, max.words=200, scale=c(2, .01), colors=brewer.pal(8, "Dark2"))
options(java.parameters = "- Xmx1024m")
library(tidyverse)
library(doParallel)
library(stringi)
library(NLP)
dyn.load("/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
# require(rJava)
library(rJava)
require(rJava)
library(tidyverse)
library(doParallel)
library(stringi)
library(NLP)
library(tm)
# dyn.load("/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
# require(rJava)
# library(rJava)
library(wordcloud)
library(RColorBrewer)
# library(RWeka)
library(wordcloud)
library(SnowballC)
setwd("/Users/akshayapadhi/Documents/myStuff/courses/10_dataScienceCapstone/CourseraCapstoneFinal/capstoneShinyApp")
runApp()
library(shiny)
runApp()
library(rsconnect)
deployApp()
deployApp()
runApp()
